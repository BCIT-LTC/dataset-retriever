services:

  app:
    image: dataset_retriever
    command:
      - /bin/sh
      - -c
      - |
        python manage.py runserver 0.0.0.0:9000
    build:
      context: .
    environment:
      - DEBUG=True
      - OAUTH2_PROVIDER_AUTHORIZATION_URL=https://provider.com/oauth2/authorize
      - OAUTH2_PROVIDER_TOKEN_URL=https://provider.com/oauth2/token
      - OAUTH2_CLIENT_ID=your-client-id
      - OAUTH2_CLIENT_SECRET=your-client-secret
      - OAUTH2_REDIRECT_URI=https://yourdomain.com/oauth2/callback
      - OAUTH2_SCOPE=['scope1', 'scope2']
      - BDS_API_URL=https://your-brightspace-lms-domain.ca/d2l/api/lp/1.43/datasets/bds
      - NETWORK_DRIVE_USERNAME=admin@test.com
      - NETWORK_DRIVE_PASSWORD=securepassword
      - NETWORK_DRIVE_SERVER=site.test.com
      - NETWORK_DRIVE_PATH=\\site.test.com\share
    # healthcheck:
    #   test: ["CMD", "curl", "-f", "http://localhost:9000/"]
    #   interval: 5s
    #   timeout: 10s
    #   retries: 5
    volumes:
      - .:/code
    ports:
      - "9000:9000"
    # depends_on:
    #   db:
    #     condition: service_healthy
    #   redis:
    #     condition: service_healthy
    #   db_init:
    #     condition: service_completed_successfully

  # Celery Service
#   celery:
#     image: dataset_retriever
#     build:
#       context: .
#     command:
#       - /bin/sh
#       - -c
#       - |
#         supervisord -n -c supervisord.conf
# # /opt/venv/bin/celery -A dataset_retriever beat --detach --loglevel=DEBUG --scheduler=django_celery_beat.schedulers.DatabaseScheduler worker_hijack_root_logger=False worker_redirect_stdouts=True worker_redirect_stdouts_level=DEBUG
# # /opt/venv/bin/celery -A dataset_retriever worker --loglevel=INFO --concurrency=1 -n worker1@%h worker_hijack_root_logger=False worker_redirect_stdouts=True
#     working_dir: /code
#     healthcheck:
#       test: /opt/venv/bin/celery -A dataset_retriever inspect ping worker1@%h
#       interval: 30s
#       timeout: 10s
#       retries: 3


  # Redis Service
  # redis:
  #   image: redis:alpine
  #   healthcheck:
  #     test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
